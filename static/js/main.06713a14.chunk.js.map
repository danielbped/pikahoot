{"version":3,"sources":["trivia.png","SVG/Loading.svg","serviceWorker.js","components/LoginForm.js","redux/actions/index.js","pages/LoginPage.js","data.js","pages/ConfigPage.js","components/Timer.js","components/GameQuestions.js","components/HeaderPlayer.js","pages/ErrorPage.js","components/Loading.js","pages/GamePage.js","components/BadScore.js","components/GoodScore.js","pages/FeedbackPage.js","pages/RankingPage.js","App.js","redux/reducers/userInfo.js","redux/reducers/settings.js","redux/reducers/index.js","redux/store/index.js","components/Reset.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Play","styled","button","Input","input","Settings","LoginForm","state","email","name","handleChange","bind","handleLoginInfo","handleTokenThing","addInfoToStore","this","test","target","value","setState","setToken","props","fetch","res","json","data","token","localStorage","setItem","setEmailStore","setNameStore","player","gravatarEmail","score","assertions","JSON","stringify","resetTimer","type","placeholder","data-testid","onChange","to","disabled","onClick","Component","connect","dispatch","payload","addToken","Logo","img","Main","main","Container","div","Title","LoginPage","src","alt","logo","settings","difficulty","Select","select","h2","Button","ConfigPage","category","categories","handleClick","fetchCategories","trivia_categories","saveSettings","htmlFor","id","map","key","settingsConfig","time","theme","Timer","timer","over","passTime","setInterval","answered","timeIsOver","userInfo","correctAnswerId","htmldecode","str","txt","document","createElement","innerHTML","Category","Question","h3","Answer","NextBtn","Grid","GameQuestions","correct","incorrect","answer","item","index","sort","a","b","localeCompare","onAnswer","questionObj","parse","getItem","newState","hard","medium","easy","nextQuestion","counter","question","correctAnswer","correct_answer","incorrectAnswers","incorrect_answers","generateAnswers","e","questionAnswered","defaultProps","undefined","Header","header","Avatar","HeaderPlayer","hash","md5","toString","h1","Image","Back","BackContainer","ErrorPage","SVG","Loading","LoadingSVG","GamePage","questions","loading","fetchQuestions","sendNextQuestion","console","log","url","results","prevstate","length","BadScore","GoodScore","Bold","span","Points","p","Message","FeedbackPage","newRank","picture","prevRanking","Rank","RankingPage","ranking","GlobalStyle","createGlobalStyle","INITIAL_STATE","action","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","Cypress","Reset","ReactDOM","render","basename","process","exact","path","component","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.06713a14.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trivia.3ccc7685.png\";","module.exports = __webpack_public_path__ + \"static/media/Loading.56aa2321.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n\nimport { addUserName, addEmail, addToken, timeReset } from '../redux/actions';\n\nconst Play = styled.button`\n  display: block;\n  width: 100%;\n  border: none;\n  background: linear-gradient(to right, hsl(198, 60%, 50%), hsl(176, 68%, 64%));\n  color: hsl(0, 0%, 100%);\n  font-size: 1.125rem;\n  font-weight: 600;\n  cursor: pointer;\n  padding: 0.75rem;\n  border-radius: 2.5rem;\n  margin-top: 3rem;\n\n  &:disabled {\n    filter: opacity(0.8);\n  }\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  background-color: transparent;\n  border: none;\n  padding: 1em 0.5rem;\n  border-bottom: 1px solid hsla(0, 0%, 100%, 62.5%);\n  color: hsl(0, 0%, 100%);\n  border-radius: 0.125rem;\n\n  &:-webkit-autofill,\n  &:-webkit-autofill:hover, \n  &:-webkit-autofill:focus, \n  &:-webkit-autofill:active {\n    transition: background-color 5000s;\n    -webkit-text-fill-color: hsl(0, 0%, 100%);\n  }\n\n  &:focus {\n    outline: none;\n  }\n\n  &::placeholder {\n    color: hsla(0, 0%, 100%, 62.5%);\n  }\n`;\n\nconst Settings = styled.button`\n  background-color: transparent;\n  border: none;\n  color: hsla(0, 0%, 100%, 62.5%);\n  margin-left: auto;\n  display: block;\n  margin-top: 0.625rem;\n  cursor: pointer;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nclass LoginForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      name: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleLoginInfo = this.handleLoginInfo.bind(this);\n    this.handleTokenThing = this.handleTokenThing.bind(this);\n    this.addInfoToStore = this.addInfoToStore.bind(this);\n  }\n\n  handleLoginInfo() {\n    const regexEmail = /^[a-z0-9.]+@[a-z0-9]+.[a-z]+(.[a-z]+)?$/i;\n    const { email, name } = this.state;\n    return (regexEmail.test(email) && name !== '');\n  }\n\n  handleChange({ target: { value, name } }) {\n    this.setState({ [name]: value });\n  }\n\n  async handleTokenThing() {\n    const { setToken } = this.props;\n\n    const url = 'https://opentdb.com/api_token.php?command=request';\n    const res = await fetch(url);\n    const data = await res.json();\n    setToken(data.token);\n    localStorage.setItem('token', data.token);\n  }\n\n  addInfoToStore() {\n    const { setEmailStore, setNameStore } = this.props;\n    const { email, name } = this.state;\n    setEmailStore(email);\n    setNameStore(name);\n    this.handleTokenThing();\n    const player = {\n      player: {\n        name,\n        gravatarEmail: email,\n        score: 0,\n        assertions: 0,\n      },\n    };\n    localStorage.setItem('state', JSON.stringify(player));\n  }\n\n  render() {\n    const { email, name } = this.state;\n    const { resetTimer } = this.props;\n    return (\n      <form>\n        <Input\n          type=\"email\"\n          placeholder=\"Email\"\n          name=\"email\"\n          data-testid=\"input-gravatar-email\"\n          onChange={ this.handleChange }\n          value={ email }\n        />\n        <Input\n          type=\"text\"\n          placeholder=\"Name\"\n          name=\"name\"\n          data-testid=\"input-player-name\"\n          onChange={ this.handleChange }\n          value={ name }\n        />\n        <Link to=\"/questions\">\n          <Play\n            type=\"button\"\n            data-testid=\"btn-play\"\n            disabled={ !this.handleLoginInfo() }\n            onClick={ () => this.addInfoToStore() }\n          >\n            Play\n          </Play>\n        </Link>\n        <Link to=\"/settings\">\n          <Settings\n            type=\"button\"\n            data-testid=\"btn-settings\"\n            onClick={ () => resetTimer() }\n          >\n            Settings\n          </Settings>\n        </Link>\n      </form>\n    );\n  }\n}\n\nLoginForm.propTypes = {\n  setEmailStore: PropTypes.func.isRequired,\n  setNameStore: PropTypes.func.isRequired,\n  setToken: PropTypes.func.isRequired,\n  resetTimer: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  setEmailStore: (email) => dispatch(addEmail(email)),\n  setNameStore: (name) => dispatch(addUserName(name)),\n  setToken: (token) => dispatch(addToken(token)),\n  resetTimer: () => dispatch(timeReset()),\n});\n\nexport default connect(null, mapDispatchToProps)(LoginForm);\n","export const ADD_EMAIL = 'ADD_EMAIL';\nexport const ADD_USERNAME = 'ADD_USERNAME';\nexport const ADD_TOKEN = 'ADD_TOKEN';\nexport const IS_OVER = 'IS_OVER';\nexport const PASS_TIME = 'PASS_TIME';\nexport const TIME_RESET = 'TIME_RESET';\nexport const CHANGE_SETTINGS = 'CHANGE_SETTINGS';\n\nexport const addEmail = (userEmail) => ({\n  type: ADD_EMAIL,\n  payload: userEmail,\n});\n\nexport const addUserName = (userName) => ({\n  type: ADD_USERNAME,\n  payload: userName,\n});\n\nexport const addToken = (token) => ({\n  type: ADD_TOKEN,\n  payload: token,\n});\n\nexport const isOver = () => ({\n  type: IS_OVER,\n  payload: true,\n});\n\nexport const timePass = () => ({\n  type: PASS_TIME,\n});\n\nexport const timeReset = () => ({\n  type: TIME_RESET,\n});\n\nexport const changeSettings = (settings) => ({\n  type: CHANGE_SETTINGS,\n  payload: settings,\n});\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nimport logo from '../trivia.png';\nimport LoginForm from '../components/LoginForm';\n\nconst Logo = styled.img`\n  margin: 0 auto;\n  margin-bottom: 2rem;\n  pointer-events: none;\n  max-width: 11.25rem;\n\n  animation-name: rotate;\n  animation-duration: 2s;\n  animation-iteration-count: infinite;\n  animation-timing-function: ease-in-out;\n  border-radius: 50%;\n\n  @keyframes rotate{\n    from{\n      transform: rotate(-360deg) scale(1);\n    }\n    to{\n      transform: rotate(360deg) scale(1.2);\n    }\n}\n`;\n\nconst Main = styled.main`\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  padding: 2rem 1rem;\n`;\n\nconst Container = styled.div`\n  max-width: 27.5rem;\n  margin-left: auto;\n  margin-right: auto;\n  background-color: hsl(218, 28%, 13%);\n  padding: 2rem;\n  border-radius: 0.375rem;\n`;\n\nconst Title = styled.img`\n  margin: 0 auto;\n  margin-bottom: 2.5rem;\n  @media ( prefers-reduced-motion : no-preference ) {\n    animation: shake infinite 1.125s cubic-bezier(0.36, 0.07, 0.19, 0.97) both;\n  }\n  @keyframes shake {\n    10%, 90% {\n      transform: translate3d(-1px, 0, 0);\n    }\n    20%, 80% {\n      transform: translate3d(2px, 0, 0);\n    }\n    30%, 50%, 70% {\n      transform: translate3d(-2px, 0, 0);\n    }\n    40%, 60% {\n      transform: translate3d(2px, 0, 0);\n    }\n  }\n`;\n\nclass LoginPage extends Component {\n  render() {\n    return (\n      <Main>\n        <Container>\n          <Title\n            src=\"https://media.discordapp.net/attachments/872170473901920328/875141650429644880/Untitled_Artwork.png?width=1440&height=534\"\n            alt=\"Pikahoot\"\n          />\n          <Logo src={ logo } alt=\"Trivia\" />\n          <LoginForm />\n        </Container>\n      </Main>\n    );\n  }\n}\n\nexport default LoginPage;\n","const settings = {\n  difficulty: [\n    { name: 'Any', value: '' },\n    { name: 'Easy', value: 'easy' },\n    { name: 'Medium', value: 'medium' },\n    { name: 'Hard', value: 'hard' },\n  ],\n  type: [\n    { name: 'Any', value: '' },\n    { name: 'True / False', value: 'boolean' },\n    { name: 'Multiple Choice', value: 'multiple' },\n  ],\n};\n\nexport default settings;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport settings from '../data';\nimport { changeSettings } from '../redux/actions';\n\nconst Select = styled.select`\n  background-color: hsl(218, 28%, 13%);\n  color: hsl(0, 0%, 100%);\n  border: none;\n  display: block;\n  width: 100%;\n  cursor: pointer;\n  padding: 0.5rem 1rem;\n  margin-top: 0.25rem;\n  margin-bottom: 0.875rem;\n  border-radius: 0.25rem;\n\n  & {\n    -moz-appearance:none;\n    -webkit-appearance:none;\n    appearance:none;\n}\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst Main = styled.main`\n  padding: 1rem;\n  max-width: 37.5rem;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Title = styled.h2`\n  font-size: 2rem;\n  color: hsl(0, 0%, 100%);\n  margin-top: 1rem;\n  margin-bottom: 0.25rem;\n  text-align: center;\n\n  @media (min-width: 60rem) {\n    margin-top: 2rem;\n    margin-bottom: 0.5rem;\n    font-size: 2.25rem;\n  }\n`;\n\nconst Button = styled.button`\n  display: block;\n  border: none;\n  background: linear-gradient(to right, hsl(198, 60%, 50%), hsl(176, 68%, 64%));\n  color: hsl(0, 0%, 100%);\n  font-weight: 600;\n  margin-top: 2rem;\n  cursor: pointer;\n  padding: 0.875rem;\n  width: 100%;\n  border-radius: 0.25rem;\n\n  &:hover {\n    filter: opacity(0.8);\n  }\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nclass ConfigPage extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      category: '',\n      difficulty: '',\n      type: '',\n      categories: [],\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.fetchCategories = this.fetchCategories.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchCategories();\n  }\n\n  async fetchCategories() {\n    const url = 'https://opentdb.com/api_category.php';\n    const res = await fetch(url);\n    const data = await res.json();\n    this.setState({\n      categories: data.trivia_categories,\n    });\n  }\n\n  handleChange({ target: { value, name } }) {\n    this.setState({ [name]: value });\n  }\n\n  handleClick() {\n    const { saveSettings } = this.props;\n    saveSettings(this.state);\n  }\n\n  render() {\n    const { difficulty, type } = settings;\n    const { categories } = this.state;\n\n    return (\n      <Main>\n        <Title data-testid=\"settings-title\">Settings</Title>\n        <form>\n          <label htmlFor=\"category\">\n            Category\n            <Select name=\"category\" id=\"category\" onChange={ this.handleChange }>\n              <option value=\"\">Any</option>\n              {categories.map(({ name, id }) => (\n                <option value={ id } key={ id }>{name}</option>\n              ))}\n            </Select>\n          </label>\n          <label htmlFor=\"difficulty\">\n            Difficulty\n            <Select name=\"difficulty\" id=\"difficulty\" onChange={ this.handleChange }>\n              {difficulty.map(({ name, value }) => (\n                <option value={ value } key={ value }>{name}</option>\n              ))}\n            </Select>\n          </label>\n          <label htmlFor=\"type\">\n            Type\n            <Select name=\"type\" id=\"type\" onChange={ this.handleChange }>\n              {type.map(({ name, value }) => (\n                <option value={ value } key={ value }>{name}</option>\n              ))}\n            </Select>\n          </label>\n          <Link to=\"/\">\n            <Button\n              type=\"button\"\n              onClick={ this.handleClick }\n            >\n              Save\n            </Button>\n          </Link>\n        </form>\n      </Main>\n    );\n  }\n}\n\nConfigPage.propTypes = {\n  saveSettings: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  saveSettings: (settingsConfig) => dispatch(changeSettings(settingsConfig)),\n});\n\nexport default connect(null, mapDispatchToProps)(ConfigPage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport styled, { ThemeProvider } from 'styled-components';\n\nimport { isOver, timePass } from '../redux/actions';\n\nconst MAX_TIME = 30;\nconst Container = styled.div`\n  padding: 0.625rem;\n  border: 2px solid hsla(0, 0%, 100%, 18.75%);\n  border-radius: 1.5rem;\n  position: relative;\n  overflow: hidden;\n  margin-bottom: 1rem;\n  text-align: center;\n  font-weight: 600;\n\n  &::after {\n    content: '';\n    position: absolute;\n    background: linear-gradient(to right, #f27121, #e94057, #8a2387);\n    top: 2px;\n    left: 2px;\n    width: ${({ theme: { time } }) => `calc(${(time / MAX_TIME) * 100}% - 4px)`};\n    height: calc(100% - 4px);\n    border-radius: 1.5rem;\n    z-index: -100;\n  }\n`;\n\nclass Timer extends Component {\n  componentDidMount() {\n    this.timer();\n  }\n\n  componentDidUpdate() {\n    const { over } = this.props;\n    if (!over) return this.over();\n  }\n\n  timer() {\n    const oneSecond = 1000;\n    const { passTime } = this.props;\n    setInterval(\n      () => {\n        const { over, answered } = this.props;\n        if (!over && !answered) return passTime();\n      }, oneSecond,\n    );\n  }\n\n  over() {\n    const { time } = this.props;\n    const { timeIsOver } = this.props;\n    if (time === 0) {\n      return timeIsOver();\n    }\n  }\n\n  render() {\n    const { time } = this.props;\n    return (\n      <ThemeProvider theme={ { time } }>\n        <Container>\n          <span>{time}</span>\n        </Container>\n      </ThemeProvider>\n    );\n  }\n}\n\nTimer.propTypes = {\n  timeIsOver: PropTypes.func.isRequired,\n  over: PropTypes.bool.isRequired,\n  answered: PropTypes.bool.isRequired,\n  time: PropTypes.number.isRequired,\n  passTime: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  timeIsOver: () => dispatch(isOver()),\n  passTime: () => dispatch(timePass()),\n});\n\nconst mapStateToProps = (state) => ({\n  over: state.userInfo.over,\n  time: state.userInfo.time,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport styled, { ThemeProvider } from 'styled-components';\n\nimport Timer from './Timer';\n\nconst correctAnswerId = 'correct-answer';\n\nconst htmldecode = (str) => {\n  const txt = document.createElement('textarea');\n  txt.innerHTML = str;\n  return txt.value;\n};\n\nconst Category = styled.h2`\n  font-size: 1.5rem;\n  color: hsla(0, 0%, 100%, 62.5%);\n  border-bottom: 1px dashed hsla(0, 0%, 100%, 62.5%); \n  margin-bottom: 1rem;\n\n  @media (min-width: 60rem) {\n    font-size: 1.75rem;\n  }\n`;\n\nconst Question = styled.h3`\n  font-size: 1.125rem;\n\n  @media (min-width: 60rem) {\n    font-size: 1.25rem;\n  }\n`;\n\nconst Answer = styled.button`\n  display: block;\n  padding: 0.625rem;\n  opacity: ${({ theme: { answered, over } }) => {\n    if (answered || over) return '0.75';\n  }};\n  border: ${({ theme: { answered, over, id } }) => {\n    if (answered || over) {\n      return `3px solid ${id === correctAnswerId\n        ? 'rgb(6, 240, 15)' : 'rgb(255, 0, 0)'}`;\n    }\n    return '3px solid hsla(198, 60%, 50%, 50%)';\n  }};\n  border-radius: 1rem;\n  background-color: transparent;\n  font-size: 0.875rem;\n  color: hsl(0, 0%, 100%);\n  width: 100%;\n  max-width: 27.5rem;\n  margin-bottom: 1rem;\n  margin-left: auto;\n  margin-right: auto;\n  cursor: pointer;\n\n  @media (min-width: 60rem) {\n    max-width: none;\n  }\n\n  @media (hover:hover) {\n    &:hover {\n      filter: brightness(1.75);\n    }\n  }\n`;\n\nconst NextBtn = styled.button`\n  display: block;\n  padding: 0.875rem 2.5rem;\n  border: none;\n  border-radius: 2.5rem;\n  background: linear-gradient(to right, hsl(198, 60%, 50%), hsl(176, 68%, 64%));\n  color: hsl(0, 0%, 100%);\n  font-size: 1.25rem;\n  font-weight: 600;\n  margin: 2rem auto;\n  cursor: pointer;\n\n  &:hover {\n    filter: opacity(0.8);\n  }\n`;\n\nconst Grid = styled.main`\n  max-width: 40rem;\n  margin-left:auto;\n  margin-right:auto;\n  margin-top: 2rem;\n  padding-left: 1rem;\n  padding-right: 1rem;\n  display: grid;\n  gap: 2rem;\n\n  @media screen and (min-width: 60rem) {\n    margin-top: 4rem;\n    max-width: 60rem;\n    padding-left: 2rem;\n    padding-right: 2rem;\n    grid-template-columns: 4fr 5fr;\n    gap: 4rem;\n  }\n`;\n\nclass GameQuestions extends Component {\n  generateAnswers(correct, incorrect) {\n    return [\n      {\n        answer: correct,\n        id: correctAnswerId,\n      },\n      ...incorrect.map((item, index) => ({\n        answer: item, id: `wrong-answer-${index}`,\n      })),\n    ].sort((a, b) => a.answer.localeCompare(b.answer));\n    // https://stackoverflow.com/questions/1129216/sort-array-of-objects-by-string-property-value\n  }\n\n  questionAnswered({ target: { id } }) {\n    const { onAnswer, time, questionObj: { difficulty } } = this.props;\n    const defaultPoint = 10;\n    const difficultyPoints = {\n      hard: 3,\n      medium: 2,\n      easy: 1,\n    };\n\n    if (id === correctAnswerId) {\n      const state = JSON.parse(localStorage.getItem('state'));\n      const newState = {\n        player: {\n          ...state.player,\n          score: state.player.score\n              + defaultPoint + (time * difficultyPoints[difficulty]),\n          assertions: state.player.assertions + 1,\n        },\n      };\n      localStorage.setItem('state', JSON.stringify(newState));\n    }\n    onAnswer();\n  }\n\n  render() {\n    const { questionObj, nextQuestion, answered, over, counter } = this.props;\n    // if (questionObj === undefined) return 'Erro';\n    const lastQuestion = 5;\n    if (counter === lastQuestion) return <Redirect to=\"/feedback\" />;\n    const\n      { category,\n        question,\n        correct_answer: correctAnswer,\n        incorrect_answers: incorrectAnswers,\n      } = questionObj;\n    return (\n      <Grid>\n        <div>\n          <Timer answered={ answered } />\n          <Category data-testid=\"question-category\">{htmldecode(category)}</Category>\n          <Question data-testid=\"question-text\">{htmldecode(question)}</Question>\n        </div>\n        <div>\n          {\n            this.generateAnswers(correctAnswer, incorrectAnswers)\n              .map(({ answer, id }) => (\n                <ThemeProvider theme={ { answered, over, id } } key={ id }>\n                  <Answer\n                    type=\"button\"\n                    data-testid={ id }\n                    id={ id }\n                    disabled={ answered || over }\n                    onClick={ (e) => this.questionAnswered(e) }\n                  >\n                    {htmldecode(answer)}\n                  </Answer>\n                </ThemeProvider>\n              ))\n          }\n          { answered || over\n            ? (\n              <NextBtn\n                type=\"button\"\n                data-testid=\"btn-next\"\n                onClick={ nextQuestion }\n              >\n                Next\n              </NextBtn>\n            ) : '' }\n        </div>\n      </Grid>\n    );\n  }\n}\n\nGameQuestions.propTypes = {\n  questionObj: PropTypes.objectOf(Object),\n  nextQuestion: PropTypes.func.isRequired,\n  onAnswer: PropTypes.func.isRequired,\n  answered: PropTypes.bool.isRequired,\n  over: PropTypes.bool.isRequired,\n  time: PropTypes.number.isRequired,\n  counter: PropTypes.number.isRequired,\n};\n\nGameQuestions.defaultProps = {\n  questionObj: undefined,\n};\n\nconst mapStateToProps = (state) => ({\n  over: state.userInfo.over,\n  time: state.userInfo.time,\n});\n\nexport default connect(mapStateToProps)(GameQuestions);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport md5 from 'crypto-js/md5';\nimport styled from 'styled-components';\n\nconst Header = styled.header`\n  background-color: hsl(218, 28%, 13%);\n  margin-bottom: 1rem;\n\n  @media (min-width: 60rem) {\n    margin-bottom: 2rem;\n  }\n`;\n\nconst Container = styled.div`\n  max-width: 70rem;\n  padding: 1rem;\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  @media (min-width: 60rem) {\n    padding: 1.5rem;\n  }\n`;\n\nconst Avatar = styled.img`\n  border: 3px solid white;\n  width: 2.5rem;\n\n  @media (min-width: 60rem) {\n    width: 5rem;\n  }\n`;\n\nclass HeaderPlayer extends Component {\n  render() {\n    const state = JSON.parse(localStorage.getItem('state'));\n    const { score, name, gravatarEmail } = state.player;\n    const hash = md5(gravatarEmail).toString();\n\n    return (\n      <Header>\n        <Container>\n          <Avatar src={ `https://www.gravatar.com/avatar/${hash}` } alt=\"Avatar\" data-testid=\"header-profile-picture\" />\n          <div>\n            <p>\n              <span data-testid=\"header-score\">{score}</span>\n              {' '}\n              pontos\n            </p>\n            <p data-testid=\"header-player-name\">{ name }</p>\n          </div>\n        </Container>\n      </Header>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  userInfo: state.userInfo,\n});\n\nexport default connect(mapStateToProps)(HeaderPlayer);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Title = styled.h1`\n  text-align: center;\n  margin-top: 1rem;\n  font-size: 1.5rem;\n\n  @media (min-width: 60rem) {\n    font-size: 1.75rem;\n  }\n`;\n\nconst Image = styled.img`\n  display: block;\n  margin: 0 auto;\n`;\n\nconst Back = styled.button`\n  background-color: transparent;\n  border: none;\n  color: hsla(0, 0%, 100%, 62.5%);\n  display: block;\n  margin: 0 auto;\n  cursor: pointer;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst BackContainer = styled.div`\n  max-width: 50rem;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 1rem;\n  font-size: 1.125rem;\n`;\n\nconst Container = styled.main`\n  margin-bottom: 1.5rem;\n\n  @media (min-width: 60rem) {\n    margin-bottom: 3rem;\n  }\n`;\n\nclass ErrorPage extends Component {\n  render() {\n    return (\n      <Container>\n        <Title>\n          Couldn&apos;t find enough questions for this category.\n          <Image\n            src=\"https://cdn.rawgit.com/ahmedhosna95/upload/1731955f/sad404.svg\"\n            alt=\"error\"\n          />\n          404\n        </Title>\n        <BackContainer>\n          <Link to=\"/\">\n            <Back>\n              Play Again\n            </Back>\n          </Link>\n        </BackContainer>\n      </Container>\n    );\n  }\n}\n\nexport default ErrorPage;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport LoadingSVG from '../SVG/Loading.svg';\n\nconst Main = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  height: 100vh;\n`;\n\nconst SVG = styled.img`\n  width: 100px;\n`;\n\nclass Loading extends Component {\n  render() {\n    return (\n      <Main>\n        <SVG src={ LoadingSVG } alt=\"Loading\" />\n      </Main>\n    );\n  }\n}\n\nexport default Loading;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport GameQuestions from '../components/GameQuestions';\nimport HeaderPlayer from '../components/HeaderPlayer';\nimport { timeReset } from '../redux/actions';\nimport ErrorPage from './ErrorPage';\nimport Loading from '../components/Loading';\n\nclass GamePage extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      questions: [],\n      counter: 0,\n      loading: true,\n      answered: false,\n    };\n\n    this.questionAnswered = this.questionAnswered.bind(this);\n    this.fetchQuestions = this.fetchQuestions.bind(this);\n    this.sendNextQuestion = this.sendNextQuestion.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchQuestions();\n  }\n\n  async fetchQuestions() {\n    const { userInfo: { token }, settings: { category, difficulty, type } } = this.props;\n    console.log(category, difficulty, type);\n    const url = `https://opentdb.com/api.php?amount=5&category=${category}&difficulty=${difficulty}&type=${type}&token=${token}`;\n    const res = await fetch(url);\n    const data = await res.json();\n    this.setState({\n      questions: data.results,\n      loading: false,\n    });\n  }\n\n  questionAnswered() {\n    this.setState({ answered: true });\n  }\n\n  sendNextQuestion() {\n    const { resetTimer } = this.props;\n    this.setState((prevstate) => ({ counter: prevstate.counter + 1, answered: false }));\n    resetTimer();\n  }\n\n  render() {\n    const { questions, counter, loading, answered } = this.state;\n    const MIN_QUESTIONS = 5;\n    if (loading) return <Loading />;\n    return (\n      <>\n        <HeaderPlayer />\n        {questions.length < MIN_QUESTIONS\n          ? <ErrorPage />\n          : (\n            <GameQuestions\n              onAnswer={ this.questionAnswered }\n              counter={ counter }\n              answered={ answered }\n              nextQuestion={ this.sendNextQuestion }\n              questionObj={ questions[counter] }\n            />\n          )}\n      </>\n    );\n  }\n}\n\nGamePage.propTypes = {\n  userInfo: PropTypes.objectOf(Object).isRequired,\n  settings: PropTypes.objectOf(Object).isRequired,\n  resetTimer: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  userInfo: state.userInfo,\n  settings: state.settings,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  resetTimer: () => dispatch(timeReset()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GamePage);\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst Image = styled.img`\n  margin: 0 auto;\n  width: 200px;\n`;\n\nclass BadScore extends Component {\n  render() {\n    return (\n      <div>\n        <Image alt=\"bad score\" src=\"https://data.whicdn.com/images/68563219/original.png\" />\n        <h1>You can do it better next time...</h1>\n      </div>\n    );\n  }\n}\n\nexport default BadScore;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst Image = styled.img`\n  margin: 0 auto;\n  width: 200px;\n`;\n\nclass GoodScore extends Component {\n  render() {\n    return (\n      <div>\n        <Image\n          src=\"https://www.clipartmax.com/png/full/426-4267156_pokemon-clip-art-happy-pikachu.png\"\n          alt=\"Congratulations!\"\n        />\n        <h1>Congratulations!</h1>\n      </div>\n    );\n  }\n}\n\nexport default GoodScore;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport md5 from 'crypto-js/md5';\nimport styled, { ThemeProvider } from 'styled-components';\n\nimport BadScore from '../components/BadScore';\nimport GoodScore from '../components/GoodScore';\nimport HeaderPlayer from '../components/HeaderPlayer';\nimport { timeReset } from '../redux/actions';\n\nconst MIN_ASSERTIONS = 3;\n\nconst Container = styled.main`\n  text-align: center;\n  color: hsla(0, 0%, 100%, 93.75%);\n  margin-bottom: 1.5rem;\n  @media (min-width: 60rem) {\n    font-size: 1.125rem;\n    margin-bottom: 3rem;\n  }\n`;\n\nconst Title = styled.h2`\n  font-size: 2rem;\n  color: hsl(0, 0%, 100%);\n  margin-top: 1.5rem;\n  @media (min-width: 60rem) {\n    margin-top: 3rem;\n    font-size: 2.25rem;\n  }\n`;\n\nconst Bold = styled.span`\n  font-weight: 600;\n`;\n\nconst Points = styled.p`\n  margin-bottom: 1rem;\n  @media (min-width: 60rem) {\n    margin-bottom: 2rem;\n  }\n`;\n\nconst Message = styled.div`\n  color: ${({ theme: { assertions } }) => {\n    if (assertions >= MIN_ASSERTIONS) {\n      return 'rgba(6, 240, 15, 0.75)';\n    }\n    return 'rgba(255, 0, 0, 0.75)';\n  }};\n`;\n\nconst Button = styled.button`\n  display: block;\n  border: none;\n  background: linear-gradient(to right, hsl(198, 60%, 50%), hsl(176, 68%, 64%));\n  color: hsl(0, 0%, 100%);\n  font-weight: 600;\n  margin: 0.75rem auto;\n  cursor: pointer;\n  padding: 0.5rem;\n  width: 13.75rem;\n  border-radius: 0.25rem;\n  &:hover {\n    filter: opacity(0.8);\n  }\n`;\n\nclass FeedbackPage extends Component {\n  componentDidMount() {\n    const { player: { name, score, email } } = JSON.parse(localStorage.getItem('state'));\n    const hash = md5(email).toString();\n    const picture = `https://www.gravatar.com/avatar/${hash}`;\n\n    const newRank = {\n      name,\n      score,\n      picture,\n    };\n    const prevRanking = JSON.parse(localStorage.getItem('ranking'));\n\n    if (prevRanking) {\n      localStorage.setItem('ranking', JSON.stringify([...prevRanking, newRank]));\n    } else {\n      localStorage.setItem('ranking', JSON.stringify([newRank]));\n    }\n  }\n\n  render() {\n    const { player: { assertions, score } } = JSON.parse(localStorage.getItem('state'));\n    const { resetTimer } = this.props;\n\n    return (\n      <>\n        <HeaderPlayer />\n        <Container>\n          <Title data-testid=\"feedback-text\">Your score</Title>\n          <ThemeProvider theme={ { assertions } }>\n            <Message data-testid=\"feedback-text\">\n              {assertions < MIN_ASSERTIONS\n                ? <BadScore />\n                : <GoodScore />}\n            </Message>\n          </ThemeProvider>\n          <p>\n            You got\n            {' '}\n            <Bold data-testid=\"feedback-total-question\">{assertions}</Bold>\n            {' '}\n            {assertions === 1 ? 'question ' : 'questions '}\n            right\n          </p>\n          <Points>\n            Your score was\n            {' '}\n            <Bold data-testid=\"feedback-total-score\">{score}</Bold>\n          </Points>\n          <Link to=\"/\">\n            <Button\n              type=\"button\"\n              onClick={ () => resetTimer() }\n              data-testid=\"btn-play-again\"\n            >\n              Play Again\n            </Button>\n          </Link>\n          <Link to=\"/ranking\">\n            <Button\n              type=\"button\"\n              data-testid=\"btn-ranking\"\n            >\n              Ranking\n            </Button>\n          </Link>\n        </Container>\n      </>\n    );\n  }\n}\n\nFeedbackPage.propTypes = {\n  resetTimer: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  resetTimer: () => dispatch(timeReset()),\n});\n\nexport default connect(null, mapDispatchToProps)(FeedbackPage);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Rank = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 0.5rem;\n  background-color: hsl(216, 53%, 9%);\n  opacity: 0.75;\n\n  &:nth-of-type(2n) {\n    background-color: hsl(217, 28%, 15%);\n  }\n\n  &:not(:last-of-type) {\n    border-bottom: 1px solid hsla(0, 0%, 100%, 62.5%);\n  }\n  \n  & img {\n    width: 2.5rem;\n    margin-right: 0.5rem;\n  }\n`;\n\nconst Container = styled.div`\n  max-width: 40rem;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 1rem;\n`;\n\nconst Title = styled.h1`\n  text-align: center;\n  font-size: 2.785rem;\n  margin-top: 1rem;\n`;\n\nconst Back = styled.button`\n  background-color: transparent;\n  border: none;\n  color: hsla(0, 0%, 100%, 62.5%);\n  margin-left: auto;\n  display: block;\n  margin-top: 0.625rem;\n  cursor: pointer;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst BackContainer = styled.div`\n  max-width: 50rem;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 1rem;\n  font-size: 1.125rem;\n`;\n\nclass RankingPage extends Component {\n  render() {\n    const ranking = JSON.parse(localStorage.getItem('ranking'));\n\n    return (\n      <main>\n        <Title data-testid=\"ranking-title\">Ranking</Title>\n\n        <Container>\n          {ranking\n            .sort((a, b) => b.score - a.score)\n            .map(({ name, score, picture }, index) => (\n              <Rank key={ index }>\n                <img src={ picture } alt={ name } />\n                <p>\n                  <span data-testid={ `player-name-${index}` }>{name}</span>\n                  {' - '}\n                  <span data-testid={ `player-score-${index}` }>{score}</span>\n                  {' '}\n                  points\n                </p>\n              </Rank>\n            ))}\n        </Container>\n\n        <BackContainer>\n          <Link to=\"/\">\n            <Back\n              type=\"button\"\n              data-testid=\"btn-go-home\"\n            >\n              Back\n            </Back>\n          </Link>\n        </BackContainer>\n      </main>\n    );\n  }\n}\n\nexport default RankingPage;\n","import React from 'react';\nimport { Switch, Route } from 'react-router';\nimport { createGlobalStyle } from 'styled-components';\n\nimport LoginPage from './pages/LoginPage';\nimport ConfigPage from './pages/ConfigPage';\nimport GamePage from './pages/GamePage';\nimport FeedbackPage from './pages/FeedbackPage';\nimport RankingPage from './pages/RankingPage';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background-color: hsl(219, 30%, 18%);\n    color: hsl(0, 0%, 100%);\n    font-family: 'Poppins', sans-serif;\n  }\n\n  h1, h2, h3 {\n    font-weight: 600;\n  }\n\n  a {\n    text-decoration: none;\n  }\n`;\n\nexport default function App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Switch>\n        <Route exact path=\"/\" component={ LoginPage } />\n        <Route path=\"/settings\" component={ ConfigPage } />\n        <Route path=\"/questions\" component={ GamePage } />\n        <Route path=\"/feedback\" component={ FeedbackPage } />\n        <Route path=\"/ranking\" component={ RankingPage } />\n      </Switch>\n    </>\n  );\n}\n","import {\n  ADD_EMAIL,\n  ADD_TOKEN,\n  ADD_USERNAME,\n  IS_OVER,\n  PASS_TIME,\n  TIME_RESET,\n} from '../actions';\n\nconst INITIAL_STATE = ({\n  email: '',\n  name: '',\n  token: '',\n  over: false,\n  time: 30,\n});\n\nconst userInfo = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case ADD_EMAIL:\n    return {\n      ...state,\n      email: action.payload,\n    };\n  case ADD_USERNAME:\n    return {\n      ...state,\n      name: action.payload,\n    };\n  case ADD_TOKEN:\n    return {\n      ...state,\n      token: action.payload,\n    };\n  case IS_OVER:\n    return {\n      ...state,\n      over: action.payload,\n    };\n  case PASS_TIME:\n    return {\n      ...state,\n      time: state.time > 0 ? state.time - 1 : 0,\n    };\n  case TIME_RESET:\n    return {\n      ...state,\n      time: 30,\n      over: false,\n    };\n  default: return state;\n  }\n};\n\nexport default userInfo;\n","import { CHANGE_SETTINGS } from '../actions';\n\nconst INITIAL_STATE = {\n  category: '',\n  difficulty: '',\n  type: '',\n};\n\nconst settings = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case CHANGE_SETTINGS:\n    return {\n      ...state,\n      category: action.payload.category,\n      difficulty: action.payload.difficulty,\n      type: action.payload.type,\n    };\n  default: return state;\n  }\n};\n\nexport default settings;\n","import { combineReducers } from 'redux';\nimport userInfo from './userInfo';\nimport settings from './settings';\n\nconst rootReducer = combineReducers({ userInfo, settings });\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nif (window.Cypress) {\n  window.store = store;\n}\n\nexport default store;\n","import { createGlobalStyle } from 'styled-components';\n\nconst Reset = createGlobalStyle`\n  /* Box sizing rules */\n  *,\n  *::before,\n  *::after {\n    box-sizing: border-box;\n  }\n\n  /* Remove default margin */\n  body,\n  h1,\n  h2,\n  h3,\n  h4,\n  p,\n  figure,\n  blockquote,\n  dl,\n  dd {\n    margin: 0;\n  }\n\n  /* Remove list styles on ul, ol elements with a list role,\n  which suggests default styling will be removed */\n  ul[role='list'],\n  ol[role='list'] {\n    list-style: none;\n  }\n\n  /* Set core root defaults */\n  html:focus-within {\n    scroll-behavior: smooth;\n  }\n\n  /* Set core body defaults */\n  body {\n    /* min-height: 100vh; */\n    text-rendering: optimizeSpeed;\n    line-height: 1.5;\n  }\n\n  /* A elements that don't have a class get default styles */\n  a:not([class]) {\n    text-decoration-skip-ink: auto;\n  }\n\n  /* Make images easier to work with */\n  img,\n  picture {\n    max-width: 100%;\n    display: block;\n  }\n\n  /* Inherit fonts for inputs and buttons */\n  input,\n  button,\n  textarea,\n  select {\n    font: inherit;\n  }\n\n  /* Remove all animations, transitions\n  and smooth scroll for people that prefer not to see them */\n  @media (prefers-reduced-motion: reduce) {\n    html:focus-within {\n    scroll-behavior: auto;\n    }\n    \n    *,\n    *::before,\n    *::after {\n      animation-duration: 0.01ms !important;\n      animation-iteration-count: 1 !important;\n      transition-duration: 0.01ms !important;\n      scroll-behavior: auto !important;\n    }\n  }\n`;\n\nexport default Reset;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App';\nimport store from './redux/store';\nimport Reset from './components/Reset';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <BrowserRouter basename={ process.env.PUBLIC_URL }>\n      <Reset />\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}